---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xindong.
--- DateTime: 2021/2/25 12:04
---

require 'base.class'



env_test_dict.class_example1 = function()
    ---@class test_base_class
    ---@field xxx fun(number, number): number, number
    local test_base_class = base.class('test_base_class')
    function test_base_class:xxx(s)
        return 'base:' .. s
    end

    function test_base_class:yyy(s)
        return 'base:' .. s
    end

    local test_sub_class = base.class('test_sub_class', test_base_class)
    function test_sub_class:ctor(s)
        self.sub_s = s
    end

    function test_sub_class:xxx(s)
        return ('sub:(%s):%s'):format(self.sub_s, s)
    end

    local sub_class_ins = test_sub_class.new("hello world")
    assert(sub_class_ins:xxx("xxx") == 'sub:(hello world):xxx')
    assert(sub_class_ins:yyy("yyy") == 'base:yyy')

    assert(sub_class_ins.__supper_map)
    assert(sub_class_ins.__supper_map[test_sub_class])

    assert(base.instance_of(sub_class_ins, test_sub_class))
    assert(base.instance_of(sub_class_ins, test_base_class))
    assert(base.instance_of({}, test_sub_class) == false)
end
