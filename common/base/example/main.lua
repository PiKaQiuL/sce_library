---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xindong.
--- DateTime: 2021/2/23 22:19
---

local util = require 'base.util'
require "base.class"

env_test_dict = {}
require_folder('base.example', {ignore = {'base.example.main'}})
local test_dict = env_test_dict
env_test_dict = nil

local table_insert = table.insert

local function unit_test(name_list)
    _G.base = _G.base or {}
    --log = log or {
    --    error = function(s)
    --        print('[error] '..s)
    --    end
    --}

    if not name_list then
        name_list = {}

        for test_name in pairs(test_dict) do
            table_insert(name_list, test_name)
        end
    end

    for k, v in pairs(test_dict)do
        log_file.info(k, v)
    end

    coroutine.async(function()
        local multi_pro_list = {}
        for _, test_name_raw in ipairs(name_list) do
            local test_name_info = util.split(test_name_raw, ',')
            local test_name = test_name_info[1]
            local f = test_dict[test_name]

            local pro ---@type promise
            pro = coroutine.as_promise(function()
                log_file.info(('unit test [%s] begin, args: %s'):format(test_name, test_name_raw))
                print(f)
                f(test_name_info)
                log_file.info(('unit test [%s] finish'):format(test_name))
            end)
            pro.k = test_name

            table.insert(multi_pro_list, pro)

        end

        local multi_pro = coroutine.multi_promise(multi_pro_list, nil)
        local ret, err = multi_pro:co_get()
        log_file.info('unit test multi_pro finish', ret, err)
    end)

end

return unit_test