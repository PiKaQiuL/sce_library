---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xindong.
--- DateTime: 2021/2/25 18:09
---

require 'base.try'


env_test_dict.try_example1 = function()
        local try_pass = false
        local catch_any = false
        local finally_pass = false

        local ret1, ret2, ret3 = try {
            function()
                try_pass = true
                return 1, 2, 3
            end,
            catch = function()
                catch_any = true
            end,
            finally = function()
                finally_pass = true
            end
        }

        assert(try_pass and finally_pass and not catch_any)
        assert(ret1 == 1 and ret2 == 2 and ret3 == 3)
    end

env_test_dict.try_example2 = function()
    local test = function(s)
        assert(s == '123')
        error(s)
    end

    local ret = try {
        test,
        '123',
        catch = function(err)
            --assert(error == '123')
        end,
        finally = function()
            return FINALLY_RETURN, '456'
        end
    }

    assert(ret == '456')
end

env_test_dict.try_example3 = function()
    local test = function(s)
        assert(s == '123')
        local err = Exception:make(s)
        err.ddd = 1
        error(err)
    end

    local err
    xpcall(function()
        local ret = try {
            test,
            '123',
            catch = function(err1)
                --assert(error == '123')
                throw(err1)
            end,
            finally = function()
                return FINALLY_RETURN, '456'
            end
        }
        end,
    function(err2)
        err = err2
    end)

    assert(err.ddd == 1)
end
